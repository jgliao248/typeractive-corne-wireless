/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 // https://nickcoutsos.github.io/keymap-editor/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    behaviors {
        caps_tap: caps_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <190>;
            bindings = <&kp LSHFT>, <&caps_word>, <&kp CAPS>;

            label = "CAPS_TAP";
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            hold-trigger-key-positions = <35>;
            flavor = "tap-preferred";
        };

        left_td: left_td {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_TD";
            #binding-cells = <0>;
            bindings = <&to 1>, <&to 3>, <&to 0>;
        };

        default_hold: default_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "DEFAULT_HOLD";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };

        right_td: right_td {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_TD";
            #binding-cells = <0>;
            bindings = <&to 2>, <&mo 4>, <&to 0>;
        };

        combo_td: combo_td {
            compatible = "zmk,behavior-tap-dance";
            label = "COMBO_TD";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 5>, <&to 6>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_layer_change {
            bindings = <&combo_td>;
            key-positions = <37 40>;
        };
    };

    macros {
        VS_comment: VS_comment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(K) &kp C>;
            label = "VS_COMMENT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R     &kp T      &kp Y      &kp U      &kp I      &kp O    &kp P     &hold_tap LC(BSPC) BACKSPACE
&kp LCTRL  &kp A  &kp S  &kp D     &kp F     &kp G      &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&caps_tap  &kp Z  &kp X  &kp C     &kp V     &kp B      &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &hold_tap ESC GRAVE
                         &kp LGUI  &left_td  &kp RET    &kp SPACE  &right_td  &kp RALT
            >;
        };

        left {
            bindings = <
&trans  &trans                 &trans     &kp UP     &trans     &trans       &trans  &trans       &trans  &trans  &trans  &trans
&trans  &kp LC(A)              &kp LEFT   &kp DOWN   &kp RIGHT  &kp LC(F)    &trans  &VS_comment  &trans  &trans  &trans  &trans
&trans  &hold_tap LC(Y) LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)    &trans  &trans       &trans  &trans  &trans  &trans
                                          &trans     &trans     &trans       &trans  &trans       &trans
            >;

            label = "Left";
        };

        right {
            bindings = <
&trans  &trans  &trans        &kp LC(UP_ARROW)  &trans         &trans    &kp PAGE_UP    &trans    &kp UP_ARROW  &trans     &kp PRINTSCREEN  &kp K_MUTE
&trans  &trans  &kp LC(LEFT)  &kp LC(DOWN)      &kp LC(RIGHT)  &trans    &kp C_AC_HOME  &kp LEFT  &kp DOWN      &kp RIGHT  &kp END          &kp C_VOLUME_UP
&trans  &trans  &trans        &trans            &trans         &trans    &kp PAGE_DOWN  &trans    &trans        &trans     &trans           &kp C_VOLUME_DOWN
                              &trans            &trans         &trans    &trans         &trans    &trans
            >;

            label = "Right";
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&kp RA(TAB)  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5     &kp N6     &kp N7  &kp N8    &kp N9  &kp N0  &kp DEL
&trans       &trans  &none   &none     &trans  &trans     &trans     &trans  &trans    &trans  &trans  &kp C_VOL_UP
&kp LSHFT    &trans  &trans  &trans    &trans  &trans     &trans     &trans  &trans    &trans  &trans  &kp C_VOL_DN
                             &kp LGUI  &trans  &kp RET    &kp SPACE  &trans  &kp RALT
            >;
        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        function {
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4           &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &trans
&bt BT_CLR_ALL  &trans        &trans        &trans           &trans        &trans          &trans  &trans  &trans  &trans   &trans   &trans
                                            &kp LC(LA(DEL))  &trans        &trans          &trans  &trans  &trans
            >;

            label = "Function";
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
